# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri Aug 19 20:40:06 2022
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b''))